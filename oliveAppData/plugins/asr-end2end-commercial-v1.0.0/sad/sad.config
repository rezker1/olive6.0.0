from idento3 import Pncc, Wave, WavException, WaveTooShortException, AudioQuality, External, FeatProcess, Feature
from idento3 import preemphasis as idtpreem

from idento3 import extend_array_borders, splice
import numpy as np

def wmvn(data, win):
    ndata = np.empty_like(data.astype('f'))
    nb_ex, dim = data.shape
    new_data = extend_array_borders(data, win, mode="reflect")
    for i in np.arange(nb_ex).astype(int):
        std      = np.std( new_data[i:i+win,:],axis=0)
        shift    = np.mean(new_data[i:i+win,:],axis=0)
        ndata[i,:] = (data[i,:] - shift)/std
    return ndata.astype('f')

def pp(feat, indices=None):
    window = 31
    window_norm = 201
    feat = feat[:,1:]
    
    feat = wmvn(feat, window_norm)

    # return splice(feat,window).astype('f')
    # Code block below replaces the splice() call above and is a very important change to keep
    # memory low for big files.  What would happen with ANY plugin that used SAD, is that it splices
    # the SAD features x31! so it was the memory hog of our systems.  Mitch changed Idento to be
    # able to accept a generator for feature post-processing, and this change creates the acceptable
    # generator to splice 'as it needs it' to keep memory low.  The SAD plugin itself is OK since it
    # does it's own local buffered splicing.  It's whenever we are not using the plugin.py from the
    # sad plugin that we need the splice generator. In a workflow with a sad plugin, we don't need
    # the splice generator.
    if True:
        chunk_size = 1000*window
        compensation = int((window-1)/2)
        complete, chunk = 0, 10000
        while complete < feat.shape[0]:
            offset = compensation if complete>0 else 0
            cspliced = splice(feat[complete-offset:complete+chunk+compensation, :], window)[offset:chunk+offset].astype('f')
            yield cspliced
            complete += chunk

featclass   = Pncc
window      = 200
overlap     = 120
sample_rate = 8000
min_rms     = 0.0
min_duration = 0.31
normalize   = True
fstart      = 200
fend        = 3300
nfilters    = 40
ncep        = 21
nfft        = 512
preemphasis = None
addenergy   = False
includeC0   = True

featprocess_func = pp

vad_padding = 0.3
vad_interpolate = 4
